import pickle
thirteen = []
with open ('thirteen.txt', 'rb') as fp:
    thirteen= pickle.load(fp)
fourteen =[]
with open ('fourteen.txt', 'rb') as fp:
    fourteen= pickle.load(fp)
fifthteen = []
with open ('fifthteen.txt', 'rb') as fp:
    fifthteen= pickle.load(fp)
twevle = []
with open ('twevle.txt', 'rb') as fp:
    twevle= pickle.load(fp)
eleven = []
with open ('eleven.txt', 'rb') as fp:
    eleven= pickle.load(fp)
ten = []
with open ('ten.txt', 'rb') as fp:
    ten = pickle.load(fp)
nine = [12, 438, 80, 6, 401, 403, 458, 78, 408, 127, 100, 138, 183, 182, 348, 61, 308, 230, 103, 159, 500, 414, 128, 55, 339, 445, 451, 441, 452, 425, 480, 333, 469, 291, 434, 156, 487, 86, 397, 144, 5, 363, 502, 508, 269, 303, 9, 19, 71, 58, 137, 420, 51, 320, 486, 482, 353, 505, 92, 398, 26, 326, 476, 135, 345, 352, 391, 313, 49, 171, 373, 481, 489, 57, 467, 1, 77, 443, 292, 180, 140, 245, 223, 427, 433, 293, 54, 325, 321, 3, 283, 217, 328, 56, 185, 279, 455, 202, 220, 113, 278, 132, 461, 196, 114, 106, 41, 209, 79, 385, 446, 134, 59, 497, 179, 270, 16, 453, 285, 232, 426, 60, 372, 44, 139, 336, 15, 43, 164, 493, 120, 307, 437, 161, 383, 470, 4, 305, 238, 411, 241, 47, 52, 2, 216, 369, 316, 395, 173, 151, 150, 471, 299, 286, 311, 46, 253, 175, 110, 211, 82, 302, 181, 459, 210, 346, 130, 394, 341, 473, 8, 96, 143, 7, 510, 509, 197, 25, 412, 334, 474, 50, 317, 155, 239, 91, 39, 439, 323, 374, 10, 33, 131, 236, 335, 506, 281, 200, 424, 384, 165, 264, 263, 312, 199, 295, 468, 98, 122, 243, 499, 405, 492, 306, 503, 337, 409, 258, 501, 342, 99, 62, 73, 24, 17, 366, 193, 157, 252, 400, 227, 329, 375, 152, 483, 436, 386, 108, 13, 475, 142, 115, 125, 111, 121, 166, 224, 169, 255, 332, 126, 465, 63, 407, 231, 294, 276, 380, 389, 53, 207, 359, 287, 149, 261, 498, 90, 349, 29, 116, 421, 107, 371, 67, 64, 192, 404, 347, 212, 318, 38, 485, 68, 472, 249, 396, 399, 233, 229, 42, 177, 491, 496, 240, 248, 274, 288, 356, 72, 189, 415, 145, 419, 430, 153, 74, 235, 406, 284, 504, 257, 97, 431, 271, 119, 160, 260, 324, 208, 327, 40, 266, 31, 136, 477, 65, 234, 32, 117, 388, 310, 101, 435, 190, 322, 95, 174, 123, 195, 194, 423, 221, 351, 112, 330, 14, 66, 511, 273, 85, 94, 104, 361, 392, 488, 387, 146, 83, 275, 393, 418, 410, 254, 226, 133, 69, 89, 314, 23, 11, 358, 228, 129, 319, 494, 268, 417, 205, 454, 118, 162, 201, 355, 449, 36, 298, 167, 331, 338, 390, 242, 203, 413, 381, 93, 444, 218, 204, 365, 370, 460, 262, 168, 18, 315, 344, 402, 186, 237, 378, 163, 21, 301, 362, 272, 70, 429, 191, 87, 20, 484, 364, 296, 81, 368, 265, 456, 422, 416, 22, 340, 267, 495, 463, 105, 300, 154, 250, 219, 350, 462, 246, 148, 290, 76, 277, 466, 343, 507, 176, 34, 289, 30, 376, 448, 0, 147, 172, 428, 382, 247, 442, 280, 141, 84, 222, 282, 184, 188, 187, 377, 297, 27, 479, 124, 198, 457, 490, 37, 178, 440, 109, 309, 379, 102, 88, 225, 367, 447, 432, 48, 259, 158, 206, 28, 213, 244, 478, 35, 357, 256, 45, 75, 251, 304, 464, 354, 214, 170, 450, 215, 360]
eight = [233, 91, 39, 71, 32, 190, 13, 76, 141, 63, 0, 102, 80, 48, 74, 53, 130, 176, 27, 64, 177, 248, 152, 35, 214, 103, 108, 41, 72, 75, 220, 106, 251, 228, 69, 238, 224, 147, 1, 104, 82, 87, 169, 116, 66, 109, 61, 17, 195, 36, 14, 119, 110, 154, 189, 185, 23, 253, 243, 196, 85, 140, 15, 47, 137, 227, 20, 242, 175, 49, 247, 170, 167, 217, 200, 156, 123, 180, 210, 50, 107, 70, 131, 12, 58, 28, 78, 192, 136, 19, 226, 30, 193, 255, 221, 62, 183, 184, 187, 45, 90, 86, 117, 37, 54, 240, 142, 46, 222, 38, 250, 229, 44, 4, 205, 239, 115, 93, 55, 145, 225, 218, 153, 213, 244, 120, 219, 114, 201, 2, 60, 172, 168, 194, 232, 98, 43, 113, 111, 6, 124, 77, 73, 138, 95, 128, 181, 216, 59, 84, 235, 245, 252, 81, 92, 133, 125, 3, 231, 16, 144, 161, 22, 208, 139, 212, 94, 121, 99, 198, 199, 65, 151, 135, 204, 236, 215, 223, 197, 118, 52, 171, 122, 105, 163, 101, 207, 148, 25, 88, 182, 202, 188, 191, 186, 173, 246, 51, 7, 126, 155, 96, 5, 146, 68, 33, 241, 249, 56, 234, 57, 112, 230, 10, 29, 159, 178, 129, 150, 26, 40, 134, 160, 67, 209, 100, 211, 143, 157, 83, 11, 79, 89, 254, 18, 206, 237, 42, 97, 165, 158, 21, 149, 132, 162, 174, 24, 31, 203, 166, 179, 164, 9, 34, 127, 8]
seven = [48, 29, 17, 123, 45, 49, 7, 53, 120, 25, 20, 92, 51, 77, 16, 43, 97, 107, 65, 82, 67, 22, 79, 116, 68, 113, 32, 66, 124, 69, 84, 102, 37, 4, 31, 54, 34, 85, 44, 122, 52, 72, 111, 110, 63, 83, 28, 39, 59, 23, 40, 75, 70, 11, 6, 60, 61, 71, 38, 91, 73, 27, 1, 125, 10, 12, 21, 19, 0, 78, 112, 104, 118, 13, 18, 98, 88, 100, 76, 56, 117, 108, 101, 33, 2, 115, 109, 81, 57, 127, 5, 35, 46, 80, 106, 96, 58, 62, 47, 86, 114, 99, 30, 94, 42, 93, 15, 74, 126, 55, 24, 36, 87, 119, 121, 14, 90, 103, 89, 95, 9, 8, 3, 50, 41, 105, 64, 26]
tables = [eight,nine,ten,eleven,twevle,thirteen,fourteen,fifthteen]
correctHash = 186
trueCases  = 0
def hash8(message, table,mod):
    global trueCases
    hashed = len(message) % mod
    #print("Intial:")
    #print(hashed)
    for i in message:
        #print("Ord:")
        #print(ord(i))
        #print("postion :")
        #print( (hashed+ord(i))%256)
        #print("In loop hashed:")
        hashed = table[(hashed+ord(i)) % mod]
        if hashed == correctHash:
            trueCases = trueCases +1
        #print(hashed)
    return hashed
from itertools import product
from string import ascii_uppercase
#userInput = input("Enter 4 Letter Word : ")

keywords = [''.join(i) for i in product(ascii_uppercase, repeat = 4)]
#print(len(keywords))
number = 0
for table in tables:
    print("Size : ")
    print(len(table))
    correctHash = hash8("MATH",table,len(table))
    trueCases = 0
    for word in keywords:
        output = hash8(word,table,len(table))
        #byte = bytes(word,encoding='utf-8')
        #temp = hashlib.sha256(byte).hexdigest()
        #if temp == correctHashSha:
            #trueForSha = trueForSha + 1
    #print(trueCases)
    #print(len(keywords))
    #print(trueForSha)
    print(trueCases)
    print(" ------- ")
